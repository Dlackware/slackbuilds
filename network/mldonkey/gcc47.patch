diff -Naur mldonkey-20120106_79a91c4.orig/src/utils/lib/CryptoPP.cc mldonkey-20120106_79a91c4/src/utils/lib/CryptoPP.cc
--- mldonkey-20120106_79a91c4.orig/src/utils/lib/CryptoPP.cc	2012-01-06 11:39:22.000000000 +0100
+++ mldonkey-20120106_79a91c4/src/utils/lib/CryptoPP.cc	2012-03-30 16:55:29.305999990 +0200
@@ -5413,7 +5413,7 @@
 	Element g[3]={b, a};
 	unsigned int i0=0, i1=1, i2=2;
 
-	while (!Equal(g[i1], this->Identity()))
+	while (!this->Equal(g[i1], this->Identity()))
 	{
 		g[i2] = Mod(g[i0], g[i1]);
 		unsigned int t = i0; i0 = i1; i1 = i2; i2 = t;
diff -Naur mldonkey-20120106_79a91c4.orig/src/utils/lib/CryptoPP.h mldonkey-20120106_79a91c4/src/utils/lib/CryptoPP.h
--- mldonkey-20120106_79a91c4.orig/src/utils/lib/CryptoPP.h	2012-01-06 11:39:22.000000000 +0100
+++ mldonkey-20120106_79a91c4/src/utils/lib/CryptoPP.h	2012-03-30 16:54:43.894999991 +0200
@@ -2633,7 +2633,7 @@
 
 	pointer allocate(size_type n, const void * = NULL)
 	{
-		CheckSize(n);
+		this->CheckSize(n);
 		if (n == 0)
 			return NULL;
 		return new T[n];
@@ -3938,15 +3938,15 @@
 {
 protected:
 	// make these functions protected to help prevent unintentional calls to them
-	BufferedTransformation::Get;
-	BufferedTransformation::Peek;
-	BufferedTransformation::TransferTo;
-	BufferedTransformation::CopyTo;
-	BufferedTransformation::CopyRangeTo;
-	BufferedTransformation::TransferMessagesTo;
-	BufferedTransformation::CopyMessagesTo;
-	BufferedTransformation::TransferAllTo;
-	BufferedTransformation::CopyAllTo;
+	using BufferedTransformation::Get;
+	using BufferedTransformation::Peek;
+	using BufferedTransformation::TransferTo;
+	using BufferedTransformation::CopyTo;
+	using BufferedTransformation::CopyRangeTo;
+	using BufferedTransformation::TransferMessagesTo;
+	using BufferedTransformation::CopyMessagesTo;
+	using BufferedTransformation::TransferAllTo;
+	using BufferedTransformation::CopyAllTo;
 	unsigned int TransferTo2(BufferedTransformation& /* target */, unsigned long &transferBytes, const std::string& /* channel */ = NULL_CHANNEL, bool /* blocking */ = true)
 		{transferBytes = 0; return 0;}
 	unsigned int CopyRangeTo2(BufferedTransformation& /* target */, unsigned long& /* begin */, unsigned long /* end */ = ULONG_MAX, const std::string& /* channel */ = NULL_CHANNEL, bool /* blocking */ = true) const
@@ -5612,7 +5612,7 @@
 {
 	this->ThrowIfInvalidTruncatedSize(size);
 
-	PadLastBlock(this->BlockSize() - 2*sizeof(HashWordType));
+	this->PadLastBlock(this->BlockSize() - 2*sizeof(HashWordType));
 	CorrectEndianess(this->m_data, this->m_data, this->BlockSize() - 2*sizeof(HashWordType));
 
 	this->m_data[this->m_data.size()-2] = B::ToEnum() ? this->GetBitCountHi() : this->GetBitCountLo();
