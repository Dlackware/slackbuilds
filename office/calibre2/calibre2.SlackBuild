#!/bin/sh

# Slackware build script for calibre2

# Copyright Matteo Bernardini <ponce@slackbuilds.org>, Pisa, Italy
# ...that hamelessly stole part of the scripts from Larry Hajali and
# Eric Hameleers
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=calibre2
SRCNAM=calibre
VERSION=${VERSION:-2.59.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi


CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.?z* || tar xvf $CWD/v$VERSION.tar.?z*
cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# This dropping of privilege is unneccessary and breaks the SlackBuild:
sed -i -e "s:if os.geteuid() == 0:if False and os.geteuid() == 0:" \
  setup/install.py

# See if we picked up any compiler or linker flags for python:
LDFLAGS=${LDFLAGS:-""}
CFLAGS=${CFLAGS:-""}

# Place where we have to install stuff:
PYTHONLIB=$( python -c "from distutils.sysconfig import get_python_lib; print get_python_lib()" )

# Create the directory for calibre's environment module:
mkdir -p $PKG$PYTHONLIB

# Find the prefix python was installed to (may be different from calibre's):
PYTHONROOT=$( python -c "from distutils.sysconfig import get_python_lib; print get_python_lib(prefix='/')" )
PYTHONPREF="${PYTHONLIB%$PYTHONROOT}"

# Massage the install script to actually install to that python libdir:
sed -e "/s.get_python_lib(prefix=/s,(prefix=.*),(prefix='$PKG$PYTHONPREF')," \
  -i setup/install.py

# Cut out the DOS crap:
sed -i -e 's/\r//' src/calibre/web/feeds/recipes/*

cat $CWD/patches/calibre_freetype.patch | patch -p1 --verbose || exit 1

OVERRIDE_LDFLAGS="$LDFLAGS $SLKLDFLAGS" \
OVERRIDE_CFLAGS="$CFLAGS $SLKCFLAGS" \
python setup.py build

# Create the directories the xdg-utils expects to be present:
mkdir -p $PKG/usr/share/{applications,icons/hicolor,mime/packages}
mkdir -p $PKG/usr/share/{desktop-directories,packages}

XDG_DATA_DIRS="$PKG/usr/share" \
XDG_UTILS_INSTALL_MODE="system" \
LIBPATH="/usr/lib${LIBDIRSUFFIX}" \
python setup.py install \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --staging-root=$PKG/usr \
  --staging-libdir=$PKG/usr/lib${LIBDIRSUFFIX}

# The bash completion files need to be in /etc :
[ -d $PKG/usr/etc ] && mv $PKG/usr/etc $PKG/

# This does not belong in a package - use 'removepkg' instead:
rm -f $PKG/usr/bin/calibre-uninstall

# All these files will be generated by update-mime-database:
find $PKG/usr/share/mime -maxdepth 1 -type f | xargs rm -f

# These files are generated by update-desktop-database while installing:
rm -f $PKG/usr/share/applications/defaults.list
rm -f $PKG/usr/share/applications/mimeinfo.cache

# These two served their purpose:
rmdir $PKG/usr/share/{desktop-directories,packages}

# And then some additions or it won't all look nice in your menu:

# Add a MimeType icon for lrf, and add an application icon:
for i in 16 24 32 48 64 96 128; do
  mkdir -p $PKG/usr/share/icons/hicolor/${i}x${i}/{apps,mimetypes}
  convert imgsrc/mimetypes/lrf.svg -scale $i \
    $PKG/usr/share/icons/hicolor/${i}x${i}/mimetypes/application-x-sony-bbeb.png
  convert resources/images/library.png -resize ${i}x${i} \
    $PKG/usr/share/icons/hicolor/${i}x${i}/apps/calibre-gui.png
  convert imgsrc/viewer.svg -scale $i \
    $PKG/usr/share/icons/hicolor/${i}x${i}/apps/calibre-viewer.png
done

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Don't ship fonts that are already in Slackware.
for FONT in $PKG/usr/share/$SRCNAM/fonts/liberation/*; do
  # Make sure that the fonts exist first before deleting them.
  if find /usr/share/fonts/ -name "$(basename $FONT)" 2>/dev/null 1>/dev/null
  then
    rm -f $FONT
    ln -s $(find /usr/share/fonts/ -name "$(basename $FONT)") $FONT
  fi
done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  LICENSE* Changelog* COPYRIGHT README* \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
