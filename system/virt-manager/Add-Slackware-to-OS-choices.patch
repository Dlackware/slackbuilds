diff -Naur virt-manager-1.4.2.orig/virtinst/osdict.py virt-manager-1.4.2/virtinst/osdict.py
--- virt-manager-1.4.2.orig/virtinst/osdict.py	2017-08-02 19:57:43.000000000 +0200
+++ virt-manager-1.4.2/virtinst/osdict.py	2017-08-17 14:18:49.348336733 +0200
@@ -159,6 +159,7 @@
         "rhel5" : "rhel5.0",
         "rhel6" : "rhel6.0",
         "rhel7" : "rhel7.0",
+        "slackware" : "slackware14.2",
         "ubuntuhardy" : "ubuntu8.04",
         "ubuntuintrepid" : "ubuntu8.10",
         "ubuntujaunty" : "ubuntu9.04",
@@ -373,7 +374,7 @@
         # EOL date. So assume None == EOL, add some manual work arounds.
         # We should fix this in a new libosinfo version, and then drop
         # this hack
-        if self._is_related_to(["fedora24", "rhel7.0", "debian6",
+        if self._is_related_to(["fedora24", "rhel7.0", "debian6", "slackware",
             "ubuntu13.04", "win8", "win2k12", "mageia5", "centos7.0"],
             check_clones=False, check_derives=False):
             return True
diff -Naur virt-manager-1.4.2.orig/virtinst/urlfetcher.py virt-manager-1.4.2/virtinst/urlfetcher.py
--- virt-manager-1.4.2.orig/virtinst/urlfetcher.py	2017-08-02 19:57:43.000000000 +0200
+++ virt-manager-1.4.2/virtinst/urlfetcher.py	2017-08-17 14:16:03.721333306 +0200
@@ -1285,6 +1285,43 @@
         return False
 
 
+class SlackwareDistro(Distro):
+    # slackware doesn't have installable URLs, so this is just for a
+    # mounted ISO
+    name = "Slackware"
+    urldistro = "slackware"
+    os_variant = "linux"
+
+    _boot_iso_paths = []
+    _xen_kernel_paths = []
+
+    def __init__(self, *args, **kwargs):
+        Distro.__init__(self, *args, **kwargs)
+        if re.match(r'i[4-9]86', self.arch):
+            self.arch = 'i586'
+            self.kname = 'hugesmp.s'
+        else:
+            self.arch = 'x86_64'
+            self.kname = 'huge.s'
+
+        self._hvm_kernel_paths = [("kernels/%s/bzImage" % self.kname,
+                                    "isolinux/initrd.img")]
+
+    def isValidStore(self):
+        # Don't support any paravirt installs
+        if self.type is not None and self.type != "hvm":
+            return False
+
+        # Slackware website / media appear to have a Slackware-HOWTO
+        # file in top level which we can use as our 'magic'
+        # check for validity
+        if not self.fetcher.hasFile("Slackware-HOWTO"):
+            return False
+
+        logging.debug("Regex didn't match, not a %s distro", self.name)
+        return False
+
+
 # Build list of all *Distro classes
 def _build_distro_list():
     allstores = []
